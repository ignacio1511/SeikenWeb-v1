# Generated by Django 4.0.5 on 2022-06-12 21:52

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('code', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, max_length=40)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('objetivo', models.CharField(choices=[('perder_grasa', 'Quiero bajar de peso lo antes posible'), ('ganar_musculo', 'Quiero ganar m√∫sculo aceleradamente'), ('ambos', 'Quiero definir mi cuerpo')], max_length=50)),
                ('nivel', models.CharField(choices=[('1', 'Nivel 1: soy un Seiken iniciando con todo'), ('2', 'Nivel 2: +15 planchas y 5 dominadas'), ('3', 'Nivel 3: +5 planchas una mano y +10 dominadas')], max_length=350, verbose_name='Nivel')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('about', models.TextField(blank=True, max_length=500, verbose_name='about')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
